{"ast":null,"code":"/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar thumbnailsSettings = {\n  thumbnail: true,\n  animateThumb: true,\n  currentPagerPosition: 'middle',\n  alignThumbnails: 'middle',\n  thumbWidth: 100,\n  thumbHeight: '80px',\n  thumbMargin: 5,\n  appendThumbnailsTo: '.lg-components',\n  toggleThumb: false,\n  enableThumbDrag: true,\n  enableThumbSwipe: true,\n  thumbnailSwipeThreshold: 10,\n  loadYouTubeThumbnail: true,\n  youTubeThumbSize: 1,\n  thumbnailPluginStrings: {\n    toggleThumbnails: 'Toggle thumbnails'\n  }\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\nvar lGEvents = {\n  afterAppendSlide: 'lgAfterAppendSlide',\n  init: 'lgInit',\n  hasVideo: 'lgHasVideo',\n  containerResize: 'lgContainerResize',\n  updateSlides: 'lgUpdateSlides',\n  afterAppendSubHtml: 'lgAfterAppendSubHtml',\n  beforeOpen: 'lgBeforeOpen',\n  afterOpen: 'lgAfterOpen',\n  slideItemLoad: 'lgSlideItemLoad',\n  beforeSlide: 'lgBeforeSlide',\n  afterSlide: 'lgAfterSlide',\n  posterClick: 'lgPosterClick',\n  dragStart: 'lgDragStart',\n  dragMove: 'lgDragMove',\n  dragEnd: 'lgDragEnd',\n  beforeNextSlide: 'lgBeforeNextSlide',\n  beforePrevSlide: 'lgBeforePrevSlide',\n  beforeClose: 'lgBeforeClose',\n  afterClose: 'lgAfterClose',\n  rotateLeft: 'lgRotateLeft',\n  rotateRight: 'lgRotateRight',\n  flipHorizontal: 'lgFlipHorizontal',\n  flipVertical: 'lgFlipVertical',\n  autoplay: 'lgAutoplay',\n  autoplayStart: 'lgAutoplayStart',\n  autoplayStop: 'lgAutoplayStop'\n};\nvar Thumbnail = /** @class */function () {\n  function Thumbnail(instance, $LG) {\n    this.thumbOuterWidth = 0;\n    this.thumbTotalWidth = 0;\n    this.translateX = 0;\n    this.thumbClickable = false;\n    // get lightGallery core plugin instance\n    this.core = instance;\n    this.$LG = $LG;\n    return this;\n  }\n  Thumbnail.prototype.init = function () {\n    // extend module default settings with lightGallery core settings\n    this.settings = __assign(__assign({}, thumbnailsSettings), this.core.settings);\n    this.thumbOuterWidth = 0;\n    this.thumbTotalWidth = this.core.galleryItems.length * (this.settings.thumbWidth + this.settings.thumbMargin);\n    // Thumbnail animation value\n    this.translateX = 0;\n    this.setAnimateThumbStyles();\n    if (!this.core.settings.allowMediaOverlap) {\n      this.settings.toggleThumb = false;\n    }\n    if (this.settings.thumbnail) {\n      this.build();\n      if (this.settings.animateThumb) {\n        if (this.settings.enableThumbDrag) {\n          this.enableThumbDrag();\n        }\n        if (this.settings.enableThumbSwipe) {\n          this.enableThumbSwipe();\n        }\n        this.thumbClickable = false;\n      } else {\n        this.thumbClickable = true;\n      }\n      this.toggleThumbBar();\n      this.thumbKeyPress();\n    }\n  };\n  Thumbnail.prototype.build = function () {\n    var _this = this;\n    this.setThumbMarkup();\n    this.manageActiveClassOnSlideChange();\n    this.$lgThumb.first().on('click.lg touchend.lg', function (e) {\n      var $target = _this.$LG(e.target);\n      if (!$target.hasAttribute('data-lg-item-id')) {\n        return;\n      }\n      setTimeout(function () {\n        // In IE9 and bellow touch does not support\n        // Go to slide if browser does not support css transitions\n        if (_this.thumbClickable && !_this.core.lgBusy) {\n          var index = parseInt($target.attr('data-lg-item-id'));\n          _this.core.slide(index, false, true, false);\n        }\n      }, 50);\n    });\n    this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\n      var index = event.detail.index;\n      _this.animateThumb(index);\n    });\n    this.core.LGel.on(lGEvents.beforeOpen + \".thumb\", function () {\n      _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n    });\n    this.core.LGel.on(lGEvents.updateSlides + \".thumb\", function () {\n      _this.rebuildThumbnails();\n    });\n    this.core.LGel.on(lGEvents.containerResize + \".thumb\", function () {\n      if (!_this.core.lgOpened) return;\n      setTimeout(function () {\n        _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n        _this.animateThumb(_this.core.index);\n        _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n      }, 50);\n    });\n  };\n  Thumbnail.prototype.setThumbMarkup = function () {\n    var thumbOuterClassNames = 'lg-thumb-outer ';\n    if (this.settings.alignThumbnails) {\n      thumbOuterClassNames += \"lg-thumb-align-\" + this.settings.alignThumbnails;\n    }\n    var html = \"<div class=\\\"\" + thumbOuterClassNames + \"\\\">\\n        <div class=\\\"lg-thumb lg-group\\\">\\n        </div>\\n        </div>\";\n    this.core.outer.addClass('lg-has-thumb');\n    if (this.settings.appendThumbnailsTo === '.lg-components') {\n      this.core.$lgComponents.append(html);\n    } else {\n      this.core.outer.append(html);\n    }\n    this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\n    this.$lgThumb = this.core.outer.find('.lg-thumb').first();\n    if (this.settings.animateThumb) {\n      this.core.outer.find('.lg-thumb').css('transition-duration', this.core.settings.speed + 'ms').css('width', this.thumbTotalWidth + 'px').css('position', 'relative');\n    }\n    this.setThumbItemHtml(this.core.galleryItems);\n  };\n  Thumbnail.prototype.enableThumbDrag = function () {\n    var _this = this;\n    var thumbDragUtils = {\n      cords: {\n        startX: 0,\n        endX: 0\n      },\n      isMoved: false,\n      newTranslateX: 0,\n      startTime: new Date(),\n      endTime: new Date(),\n      touchMoveTime: 0\n    };\n    var isDragging = false;\n    this.$thumbOuter.addClass('lg-grab');\n    this.core.outer.find('.lg-thumb').first().on('mousedown.lg.thumb', function (e) {\n      if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n        // execute only on .lg-object\n        e.preventDefault();\n        thumbDragUtils.cords.startX = e.pageX;\n        thumbDragUtils.startTime = new Date();\n        _this.thumbClickable = false;\n        isDragging = true;\n        // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n        _this.core.outer.get().scrollLeft += 1;\n        _this.core.outer.get().scrollLeft -= 1;\n        // *\n        _this.$thumbOuter.removeClass('lg-grab').addClass('lg-grabbing');\n      }\n    });\n    this.$LG(window).on(\"mousemove.lg.thumb.global\" + this.core.lgId, function (e) {\n      if (!_this.core.lgOpened) return;\n      if (isDragging) {\n        thumbDragUtils.cords.endX = e.pageX;\n        thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\n      }\n    });\n    this.$LG(window).on(\"mouseup.lg.thumb.global\" + this.core.lgId, function () {\n      if (!_this.core.lgOpened) return;\n      if (thumbDragUtils.isMoved) {\n        thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\n      } else {\n        _this.thumbClickable = true;\n      }\n      if (isDragging) {\n        isDragging = false;\n        _this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\n      }\n    });\n  };\n  Thumbnail.prototype.enableThumbSwipe = function () {\n    var _this = this;\n    var thumbDragUtils = {\n      cords: {\n        startX: 0,\n        endX: 0\n      },\n      isMoved: false,\n      newTranslateX: 0,\n      startTime: new Date(),\n      endTime: new Date(),\n      touchMoveTime: 0\n    };\n    this.$lgThumb.on('touchstart.lg', function (e) {\n      if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n        e.preventDefault();\n        thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\n        _this.thumbClickable = false;\n        thumbDragUtils.startTime = new Date();\n      }\n    });\n    this.$lgThumb.on('touchmove.lg', function (e) {\n      if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n        e.preventDefault();\n        thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\n        thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\n      }\n    });\n    this.$lgThumb.on('touchend.lg', function () {\n      if (thumbDragUtils.isMoved) {\n        thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\n      } else {\n        _this.thumbClickable = true;\n      }\n    });\n  };\n  // Rebuild thumbnails\n  Thumbnail.prototype.rebuildThumbnails = function () {\n    var _this = this;\n    // Remove transitions\n    this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\n    setTimeout(function () {\n      _this.thumbTotalWidth = _this.core.galleryItems.length * (_this.settings.thumbWidth + _this.settings.thumbMargin);\n      _this.$lgThumb.css('width', _this.thumbTotalWidth + 'px');\n      _this.$lgThumb.empty();\n      _this.setThumbItemHtml(_this.core.galleryItems);\n      _this.animateThumb(_this.core.index);\n    }, 50);\n    setTimeout(function () {\n      _this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\n    }, 200);\n  };\n  // @ts-check\n  Thumbnail.prototype.setTranslate = function (value) {\n    this.$lgThumb.css('transform', 'translate3d(-' + value + 'px, 0px, 0px)');\n  };\n  Thumbnail.prototype.getPossibleTransformX = function (left) {\n    if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\n      left = this.thumbTotalWidth - this.thumbOuterWidth;\n    }\n    if (left < 0) {\n      left = 0;\n    }\n    return left;\n  };\n  Thumbnail.prototype.animateThumb = function (index) {\n    this.$lgThumb.css('transition-duration', this.core.settings.speed + 'ms');\n    if (this.settings.animateThumb) {\n      var position = 0;\n      switch (this.settings.currentPagerPosition) {\n        case 'left':\n          position = 0;\n          break;\n        case 'middle':\n          position = this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\n          break;\n        case 'right':\n          position = this.thumbOuterWidth - this.settings.thumbWidth;\n      }\n      this.translateX = (this.settings.thumbWidth + this.settings.thumbMargin) * index - 1 - position;\n      if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\n        this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\n      }\n      if (this.translateX < 0) {\n        this.translateX = 0;\n      }\n      this.setTranslate(this.translateX);\n    }\n  };\n  Thumbnail.prototype.onThumbTouchMove = function (thumbDragUtils) {\n    thumbDragUtils.newTranslateX = this.translateX;\n    thumbDragUtils.isMoved = true;\n    thumbDragUtils.touchMoveTime = new Date().valueOf();\n    thumbDragUtils.newTranslateX -= thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n    thumbDragUtils.newTranslateX = this.getPossibleTransformX(thumbDragUtils.newTranslateX);\n    // move current slide\n    this.setTranslate(thumbDragUtils.newTranslateX);\n    this.$thumbOuter.addClass('lg-dragging');\n    return thumbDragUtils;\n  };\n  Thumbnail.prototype.onThumbTouchEnd = function (thumbDragUtils) {\n    thumbDragUtils.isMoved = false;\n    thumbDragUtils.endTime = new Date();\n    this.$thumbOuter.removeClass('lg-dragging');\n    var touchDuration = thumbDragUtils.endTime.valueOf() - thumbDragUtils.startTime.valueOf();\n    var distanceXnew = thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n    var speedX = Math.abs(distanceXnew) / touchDuration;\n    // Some magical numbers\n    // Can be improved\n    if (speedX > 0.15 && thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30) {\n      speedX += 1;\n      if (speedX > 2) {\n        speedX += 1;\n      }\n      speedX = speedX + speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\n      this.$lgThumb.css('transition-duration', Math.min(speedX - 1, 2) + 'settings');\n      distanceXnew = distanceXnew * speedX;\n      this.translateX = this.getPossibleTransformX(this.translateX - distanceXnew);\n      this.setTranslate(this.translateX);\n    } else {\n      this.translateX = thumbDragUtils.newTranslateX;\n    }\n    if (Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) < this.settings.thumbnailSwipeThreshold) {\n      this.thumbClickable = true;\n    }\n    return thumbDragUtils;\n  };\n  Thumbnail.prototype.getThumbHtml = function (thumb, index, alt) {\n    var slideVideoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\n    var thumbImg;\n    if (slideVideoInfo.youtube) {\n      if (this.settings.loadYouTubeThumbnail) {\n        thumbImg = '//img.youtube.com/vi/' + slideVideoInfo.youtube[1] + '/' + this.settings.youTubeThumbSize + '.jpg';\n      } else {\n        thumbImg = thumb;\n      }\n    } else {\n      thumbImg = thumb;\n    }\n    var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n    return \"<div data-lg-item-id=\\\"\" + index + \"\\\" class=\\\"lg-thumb-item \" + (index === this.core.index ? ' active' : '') + \"\\\"\\n        style=\\\"width:\" + this.settings.thumbWidth + \"px; height: \" + this.settings.thumbHeight + \";\\n            margin-right: \" + this.settings.thumbMargin + \"px;\\\">\\n            <img \" + altAttr + \" data-lg-item-id=\\\"\" + index + \"\\\" src=\\\"\" + thumbImg + \"\\\" />\\n        </div>\";\n  };\n  Thumbnail.prototype.getThumbItemHtml = function (items) {\n    var thumbList = '';\n    for (var i = 0; i < items.length; i++) {\n      thumbList += this.getThumbHtml(items[i].thumb, i, items[i].alt);\n    }\n    return thumbList;\n  };\n  Thumbnail.prototype.setThumbItemHtml = function (items) {\n    var thumbList = this.getThumbItemHtml(items);\n    this.$lgThumb.html(thumbList);\n  };\n  Thumbnail.prototype.setAnimateThumbStyles = function () {\n    if (this.settings.animateThumb) {\n      this.core.outer.addClass('lg-animate-thumb');\n    }\n  };\n  // Manage thumbnail active calss\n  Thumbnail.prototype.manageActiveClassOnSlideChange = function () {\n    var _this = this;\n    // manage active class for thumbnail\n    this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\n      var $thumb = _this.core.outer.find('.lg-thumb-item');\n      var index = event.detail.index;\n      $thumb.removeClass('active');\n      $thumb.eq(index).addClass('active');\n    });\n  };\n  // Toggle thumbnail bar\n  Thumbnail.prototype.toggleThumbBar = function () {\n    var _this = this;\n    if (this.settings.toggleThumb) {\n      this.core.outer.addClass('lg-can-toggle');\n      this.core.$toolbar.append('<button type=\"button\" aria-label=\"' + this.settings.thumbnailPluginStrings['toggleThumbnails'] + '\" class=\"lg-toggle-thumb lg-icon\"></button>');\n      this.core.outer.find('.lg-toggle-thumb').first().on('click.lg', function () {\n        _this.core.outer.toggleClass('lg-components-open');\n      });\n    }\n  };\n  Thumbnail.prototype.thumbKeyPress = function () {\n    var _this = this;\n    this.$LG(window).on(\"keydown.lg.thumb.global\" + this.core.lgId, function (e) {\n      if (!_this.core.lgOpened || !_this.settings.toggleThumb) return;\n      if (e.keyCode === 38) {\n        e.preventDefault();\n        _this.core.outer.addClass('lg-components-open');\n      } else if (e.keyCode === 40) {\n        e.preventDefault();\n        _this.core.outer.removeClass('lg-components-open');\n      }\n    });\n  };\n  Thumbnail.prototype.destroy = function () {\n    if (this.settings.thumbnail) {\n      this.$LG(window).off(\".lg.thumb.global\" + this.core.lgId);\n      this.core.LGel.off('.lg.thumb');\n      this.core.LGel.off('.thumb');\n      this.$thumbOuter.remove();\n      this.core.outer.removeClass('lg-has-thumb');\n    }\n  };\n  return Thumbnail;\n}();\nexport default Thumbnail;","map":{"version":3,"names":["thumbnailsSettings","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbHeight","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","thumbnailPluginStrings","toggleThumbnails","lGEvents","afterAppendSlide","init","hasVideo","containerResize","updateSlides","afterAppendSubHtml","beforeOpen","afterOpen","slideItemLoad","beforeSlide","afterSlide","posterClick","dragStart","dragMove","dragEnd","beforeNextSlide","beforePrevSlide","beforeClose","afterClose","rotateLeft","rotateRight","flipHorizontal","flipVertical","autoplay","autoplayStart","autoplayStop","Thumbnail","instance","$LG","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","core","prototype","settings","__assign","galleryItems","length","setAnimateThumbStyles","allowMediaOverlap","build","toggleThumbBar","thumbKeyPress","_this","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","first","on","e","$target","target","hasAttribute","setTimeout","lgBusy","index","parseInt","attr","slide","LGel","event","detail","outer","get","offsetWidth","rebuildThumbnails","lgOpened","thumbOuterClassNames","html","addClass","$lgComponents","append","$thumbOuter","find","css","speed","setThumbItemHtml","thumbDragUtils","cords","startX","endX","isMoved","newTranslateX","startTime","Date","endTime","touchMoveTime","isDragging","preventDefault","pageX","scrollLeft","removeClass","window","lgId","onThumbTouchMove","onThumbTouchEnd","targetTouches","empty","setTranslate","value","getPossibleTransformX","left","position","valueOf","touchDuration","distanceXnew","speedX","Math","abs","min","getThumbHtml","thumb","alt","slideVideoInfo","__slideVideoInfo","thumbImg","youtube","altAttr","getThumbItemHtml","items","thumbList","i","$thumb","eq","$toolbar","toggleClass","keyCode","destroy","off","remove"],"sources":["D:\\tourism-management-system-main\\node_modules\\src\\plugins\\thumbnail\\lg-thumbnail-settings.ts","D:\\tourism-management-system-main\\node_modules\\src\\lg-events.ts","D:\\tourism-management-system-main\\node_modules\\src\\plugins\\thumbnail\\lg-thumbnail.ts"],"sourcesContent":["interface ThumbnailStrings {\n    toggleThumbnails: string;\n}\n\nexport interface ThumbnailsSettings {\n    /**\n     * Enable thumbnails for the gallery\n     */\n    thumbnail: boolean;\n\n    /*\n     * Enable thumbnail animation.\n     */\n    animateThumb: boolean;\n\n    /**\n     * Position of selected thumbnail.\n     */\n    currentPagerPosition: 'left' | 'middle' | 'right';\n\n    /**\n     * Position of thumbnails when the width of all thumbnails combined is less than the gallery's width.\n     *\n     */\n    alignThumbnails: 'left' | 'middle' | 'right';\n\n    /**\n     * Width of each thumbnails.\n     */\n    thumbWidth: number;\n\n    /**\n     * Height of each thumbnails.\n     */\n    thumbHeight: string;\n\n    /**\n     * Spacing between each thumbnails\n     */\n    thumbMargin: number;\n\n    /**\n     * control where the thumbnails should be appended.\n     * By default, thumbnails are appended to '.lg-components' which has inbuilt open close transitions\n     * If you don't want initial thumbnails transitions, or want to do more customization,\n     * you can append thumbnails to the lightGalley outer div -\n     * <a href=\"/demos/thumbnails/#static-thumbnails\">Demo</a>\n     */\n    appendThumbnailsTo: '.lg-outer' | '.lg-components';\n\n    /**\n     * Enable toggle captions and thumbnails.\n     * @description not applicable if allowMediaOverlap is false\n     */\n    toggleThumb: boolean;\n\n    /**\n     * Enables desktop mouse drag support for thumbnails.\n     */\n    enableThumbDrag: boolean;\n\n    /**\n     * Enables thumbnail touch/swipe support for touch devices\n     */\n    enableThumbSwipe: boolean;\n\n    /**\n     * By setting the thumbnailSwipeThreshold (in px) you can set how far the user must swipe for the next/prev slide.\n     */\n    thumbnailSwipeThreshold: number;\n\n    /**\n     * You can automatically load thumbnails for YouTube videos from YouTube by setting loadYouTubeThumbnail true\n     */\n    loadYouTubeThumbnail: boolean;\n\n    /**\n     * You can specify the thumbnail size by setting respective number.\n     */\n    //@todo add demo\n    youTubeThumbSize: number;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    thumbnailPluginStrings: ThumbnailStrings;\n}\n\nexport const thumbnailsSettings: ThumbnailsSettings = {\n    thumbnail: true,\n\n    animateThumb: true,\n    currentPagerPosition: 'middle',\n    alignThumbnails: 'middle',\n\n    thumbWidth: 100,\n    thumbHeight: '80px',\n    thumbMargin: 5,\n\n    appendThumbnailsTo: '.lg-components',\n    toggleThumb: false,\n\n    enableThumbDrag: true,\n    enableThumbSwipe: true,\n    thumbnailSwipeThreshold: 10,\n\n    loadYouTubeThumbnail: true,\n    youTubeThumbSize: 1,\n\n    thumbnailPluginStrings: {\n        toggleThumbnails: 'Toggle thumbnails',\n    } as ThumbnailStrings,\n};\n","import { LightGallery } from './lightgallery';\nimport { VideoSource } from './plugins/video/types';\n\n/**\n * List of lightGallery events\n * All events should be documented here\n * Below interfaces are used to build the website documentations\n * */\nexport const lGEvents: {\n    [key: string]: string;\n} = {\n    afterAppendSlide: 'lgAfterAppendSlide',\n    init: 'lgInit',\n    hasVideo: 'lgHasVideo',\n    containerResize: 'lgContainerResize',\n    updateSlides: 'lgUpdateSlides',\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\n    beforeOpen: 'lgBeforeOpen',\n    afterOpen: 'lgAfterOpen',\n    slideItemLoad: 'lgSlideItemLoad',\n    beforeSlide: 'lgBeforeSlide',\n    afterSlide: 'lgAfterSlide',\n    posterClick: 'lgPosterClick',\n    dragStart: 'lgDragStart',\n    dragMove: 'lgDragMove',\n    dragEnd: 'lgDragEnd',\n    beforeNextSlide: 'lgBeforeNextSlide',\n    beforePrevSlide: 'lgBeforePrevSlide',\n    beforeClose: 'lgBeforeClose',\n    afterClose: 'lgAfterClose',\n    rotateLeft: 'lgRotateLeft',\n    rotateRight: 'lgRotateRight',\n    flipHorizontal: 'lgFlipHorizontal',\n    flipVertical: 'lgFlipVertical',\n    autoplay: 'lgAutoplay',\n    autoplayStart: 'lgAutoplayStart',\n    autoplayStop: 'lgAutoplayStop',\n};\n\n// Follow the below format for the event documentation\n// @method is the method name when event is used with Angular/React components\n\n/**\n * Fired only once when lightGallery is initialized\n * @name lgInit\n * @method onInit\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action on lightGallery initialization.\n *   // Init event returns the plugin instance that can be used to call any lightGalley public method\n *   let pluginInstance = null;\n *   lg.addEventListener('lgInit', (event) => {\n *      pluginInstance = event.detail.instance;\n *   });\n *   lightGallery(lg);\n * @see <a href=\"/docs/methods\">Methods<a>\n */\nexport interface InitDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired when the slide content has been inserted into it's slide container.\n * @name lgAfterAppendSlide\n * @method onAfterAppendSlide\n */\nexport interface AfterAppendSlideEventDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired immediately before opening the gallery\n * @name lgBeforeOpen\n * @method onBeforeOpen\n */\nexport interface BeforeOpenDetail {}\n\n/**\n * Fired immediately after opening the gallery\n * @name lgAfterOpen\n * @method onAfterOpen\n */\nexport interface AfterOpenDetail {}\n\n/**\n * Fired once the media inside the slide has been completely loaded .\n * @name lgSlideItemLoad\n * @method onSlideItemLoad\n */\nexport interface SlideItemLoadDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * For the first slide, lightGallery adds some delay for displaying the loaded slide item.\n     * This delay is required for the transition effect when the slide item is displayed\n     * Respect the delay when you use this event\n     */\n    delay: number;\n\n    // Will be true for the first slide\n    isFirstSlide: boolean;\n}\n\n/**\n * Fired immediately before each slide transition.\n * @name lgBeforeSlide\n * @method onBeforeSlide\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action before each slide transition\n *   lg.addEventListener('lgBeforeSlide', (event) => {\n *       const { index, prevIndex } = event.detail;\n *       alert(index, prevIndex);\n *   });\n *   lightGallery(lg);\n */\nexport interface BeforeSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired immediately after each slide transition.\n * @name lgAfterSlide\n * @method onAfterSlide\n */\nexport interface AfterSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired when the video poster is clicked.\n * @name lgPosterClick\n * @method onPosterClick\n */\nexport interface PosterClickDetail {}\n\n/**\n * Fired when the drag event to move to different slide starts.\n * @name lgDragStart\n * @method onDragStart\n */\nexport interface DragStartDetail {}\n\n/**\n * Fired periodically during the drag operation.\n * @name lgDragMove\n * @method onDragMove\n */\nexport interface DragMoveDetail {}\n\n/**\n * Fired when the user has finished the drag operation\n * @name lgDragEnd\n * @method onDragEnd\n */\nexport interface DragEndDetail {}\n\n/**\n * Fired immediately before the start of the close process.\n * @name lgBeforeClose\n * @method onBeforeClose\n */\nexport interface BeforeCloseDetail {}\n\n/**\n * Fired immediately once lightGallery is closed.\n * @name lgAfterClose\n * @method onAfterClose\n */\nexport interface AfterCloseDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired immediately before each \"next\" slide transition\n * @name lgBeforeNextSlide\n * @method onBeforeNextSlide\n */\nexport interface BeforeNextSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired immediately before each \"prev\" slide transition\n * @name lgBeforePrevSlide\n * @method onBeforePrevSlide\n */\nexport interface BeforePrevSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired when the sub-html content (ex : title/ description) has been appended into the slide.\n * @name lgAfterAppendSubHtml\n * @method onAfterAppendSubHtml\n */\nexport interface AfterAppendSubHtmlDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the lightGallery container has been resized.\n * @name lgContainerResize\n * @method onContainerResize\n */\nexport interface ContainerResizeDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when lightGallery detects video slide\n * @name lgHasVideo\n * @method onHasVideo\n */\nexport interface HasVideoDetail {\n    /**\n     * Index of the slide,\n     */\n    index: number;\n    /**\n     * Video source\n     */\n    src: string;\n    /**\n     * HTML5 video source if available\n     * <p>\n       HTML5 video source = source: {\n            src: string;\n            type: string;\n        }[];\n        attributes: HTMLVideoElement;\n     * </p>\n     */\n    html5Video: VideoSource;\n    /**\n     * True if video has poster\n     */\n    hasPoster: boolean;\n}\n\n/**\n * Fired when the image is rotated in anticlockwise direction\n * @name lgRotateLeft\n * @method onRotateLeft\n */\nexport interface RotateLeftDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is rotated in clockwise direction\n * @name lgRotateRight\n * @method onRotateRight\n */\nexport interface RotateRightDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped horizontally\n * @name lgFlipHorizontal\n * @method onFlipHorizontal\n */\nexport interface FlipHorizontalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped vertically\n * @name lgFlipVertical\n * @method onFlipVertical\n */\nexport interface FlipVerticalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n","import {\n    ThumbnailsSettings,\n    thumbnailsSettings,\n} from './lg-thumbnail-settings';\nimport { LgQuery, lgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport { GalleryItem } from '../../lg-utils';\nimport { lGEvents } from '../../lg-events';\n\ninterface ThumbDragUtils {\n    cords: {\n        startX: number;\n        endX: number;\n    };\n    isMoved: boolean;\n    newTranslateX: number;\n    startTime: Date;\n    endTime: Date;\n    touchMoveTime: number;\n}\ninterface ThumbnailGalleryItem extends GalleryItem {\n    thumb: string;\n}\nexport default class Thumbnail {\n    private core: LightGallery;\n    private $thumbOuter!: lgQuery;\n    private $lgThumb!: lgQuery;\n    private thumbOuterWidth = 0;\n    private thumbTotalWidth = 0;\n    private translateX = 0;\n    private thumbClickable = false;\n    private settings!: ThumbnailsSettings;\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        return this;\n    }\n\n    init(): void {\n        // extend module default settings with lightGallery core settings\n        this.settings = {\n            ...thumbnailsSettings,\n            ...this.core.settings,\n        };\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth =\n            this.core.galleryItems.length *\n            (this.settings.thumbWidth + this.settings.thumbMargin);\n\n        // Thumbnail animation value\n        this.translateX = 0;\n\n        this.setAnimateThumbStyles();\n\n        if (!this.core.settings.allowMediaOverlap) {\n            this.settings.toggleThumb = false;\n        }\n\n        if (this.settings.thumbnail) {\n            this.build();\n            if (this.settings.animateThumb) {\n                if (this.settings.enableThumbDrag) {\n                    this.enableThumbDrag();\n                }\n\n                if (this.settings.enableThumbSwipe) {\n                    this.enableThumbSwipe();\n                }\n\n                this.thumbClickable = false;\n            } else {\n                this.thumbClickable = true;\n            }\n\n            this.toggleThumbBar();\n            this.thumbKeyPress();\n        }\n    }\n\n    build(): void {\n        this.setThumbMarkup();\n        this.manageActiveClassOnSlideChange();\n        this.$lgThumb.first().on('click.lg touchend.lg', (e: CustomEvent) => {\n            const $target = this.$LG(e.target);\n            if (!$target.hasAttribute('data-lg-item-id')) {\n                return;\n            }\n            setTimeout(() => {\n                // In IE9 and bellow touch does not support\n                // Go to slide if browser does not support css transitions\n                if (this.thumbClickable && !this.core.lgBusy) {\n                    const index = parseInt($target.attr('data-lg-item-id'));\n                    this.core.slide(index, false, true, false);\n                }\n            }, 50);\n        });\n\n        this.core.LGel.on(`${lGEvents.beforeSlide}.thumb`, (event) => {\n            const { index } = event.detail;\n            this.animateThumb(index);\n        });\n        this.core.LGel.on(`${lGEvents.beforeOpen}.thumb`, () => {\n            this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n        });\n\n        this.core.LGel.on(`${lGEvents.updateSlides}.thumb`, () => {\n            this.rebuildThumbnails();\n        });\n        this.core.LGel.on(`${lGEvents.containerResize}.thumb`, () => {\n            if (!this.core.lgOpened) return;\n            setTimeout(() => {\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n                this.animateThumb(this.core.index);\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n            }, 50);\n        });\n    }\n\n    setThumbMarkup(): void {\n        let thumbOuterClassNames = 'lg-thumb-outer ';\n\n        if (this.settings.alignThumbnails) {\n            thumbOuterClassNames += `lg-thumb-align-${this.settings.alignThumbnails}`;\n        }\n\n        const html = `<div class=\"${thumbOuterClassNames}\">\n        <div class=\"lg-thumb lg-group\">\n        </div>\n        </div>`;\n\n        this.core.outer.addClass('lg-has-thumb');\n\n        if (this.settings.appendThumbnailsTo === '.lg-components') {\n            this.core.$lgComponents.append(html);\n        } else {\n            this.core.outer.append(html);\n        }\n\n        this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\n        this.$lgThumb = this.core.outer.find('.lg-thumb').first();\n\n        if (this.settings.animateThumb) {\n            this.core.outer\n                .find('.lg-thumb')\n                .css('transition-duration', this.core.settings.speed + 'ms')\n                .css('width', this.thumbTotalWidth + 'px')\n                .css('position', 'relative');\n        }\n\n        this.setThumbItemHtml(\n            (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n        );\n    }\n\n    enableThumbDrag(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        let isDragging = false;\n\n        this.$thumbOuter.addClass('lg-grab');\n\n        this.core.outer\n            .find('.lg-thumb')\n            .first()\n            .on('mousedown.lg.thumb', (e) => {\n                if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                    // execute only on .lg-object\n                    e.preventDefault();\n                    thumbDragUtils.cords.startX = e.pageX;\n\n                    thumbDragUtils.startTime = new Date();\n                    this.thumbClickable = false;\n\n                    isDragging = true;\n\n                    // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                    this.core.outer.get().scrollLeft += 1;\n                    this.core.outer.get().scrollLeft -= 1;\n\n                    // *\n                    this.$thumbOuter\n                        .removeClass('lg-grab')\n                        .addClass('lg-grabbing');\n                }\n            });\n\n        this.$LG(window).on(\n            `mousemove.lg.thumb.global${this.core.lgId}`,\n            (e) => {\n                if (!this.core.lgOpened) return;\n                if (isDragging) {\n                    thumbDragUtils.cords.endX = e.pageX;\n\n                    thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n                }\n            },\n        );\n\n        this.$LG(window).on(`mouseup.lg.thumb.global${this.core.lgId}`, () => {\n            if (!this.core.lgOpened) return;\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n\n            if (isDragging) {\n                isDragging = false;\n                this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\n            }\n        });\n    }\n\n    enableThumbSwipe(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        this.$lgThumb.on('touchstart.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\n                this.thumbClickable = false;\n                thumbDragUtils.startTime = new Date();\n            }\n        });\n\n        this.$lgThumb.on('touchmove.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\n                thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n            }\n        });\n\n        this.$lgThumb.on('touchend.lg', () => {\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n        });\n    }\n\n    // Rebuild thumbnails\n    rebuildThumbnails(): void {\n        // Remove transitions\n        this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\n        setTimeout(() => {\n            this.thumbTotalWidth =\n                this.core.galleryItems.length *\n                (this.settings.thumbWidth + this.settings.thumbMargin);\n            this.$lgThumb.css('width', this.thumbTotalWidth + 'px');\n            this.$lgThumb.empty();\n            this.setThumbItemHtml(\n                (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n            );\n            this.animateThumb(this.core.index);\n        }, 50);\n        setTimeout(() => {\n            this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\n        }, 200);\n    }\n\n    // @ts-check\n\n    setTranslate(value: number): void {\n        this.$lgThumb.css(\n            'transform',\n            'translate3d(-' + value + 'px, 0px, 0px)',\n        );\n    }\n\n    getPossibleTransformX(left: number): number {\n        if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\n            left = this.thumbTotalWidth - this.thumbOuterWidth;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n        return left;\n    }\n\n    animateThumb(index: number): void {\n        this.$lgThumb.css(\n            'transition-duration',\n            this.core.settings.speed + 'ms',\n        );\n        if (this.settings.animateThumb) {\n            let position = 0;\n            switch (this.settings.currentPagerPosition) {\n                case 'left':\n                    position = 0;\n                    break;\n                case 'middle':\n                    position =\n                        this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\n                    break;\n                case 'right':\n                    position = this.thumbOuterWidth - this.settings.thumbWidth;\n            }\n            this.translateX =\n                (this.settings.thumbWidth + this.settings.thumbMargin) * index -\n                1 -\n                position;\n            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\n                this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\n            }\n\n            if (this.translateX < 0) {\n                this.translateX = 0;\n            }\n\n            this.setTranslate(this.translateX);\n        }\n    }\n\n    onThumbTouchMove(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.newTranslateX = this.translateX;\n        thumbDragUtils.isMoved = true;\n\n        thumbDragUtils.touchMoveTime = new Date().valueOf();\n\n        thumbDragUtils.newTranslateX -=\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n\n        thumbDragUtils.newTranslateX = this.getPossibleTransformX(\n            thumbDragUtils.newTranslateX,\n        );\n\n        // move current slide\n        this.setTranslate(thumbDragUtils.newTranslateX);\n        this.$thumbOuter.addClass('lg-dragging');\n\n        return thumbDragUtils;\n    }\n\n    onThumbTouchEnd(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.isMoved = false;\n        thumbDragUtils.endTime = new Date();\n        this.$thumbOuter.removeClass('lg-dragging');\n\n        const touchDuration =\n            thumbDragUtils.endTime.valueOf() -\n            thumbDragUtils.startTime.valueOf();\n        let distanceXnew =\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n        let speedX = Math.abs(distanceXnew) / touchDuration;\n        // Some magical numbers\n        // Can be improved\n        if (\n            speedX > 0.15 &&\n            thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30\n        ) {\n            speedX += 1;\n\n            if (speedX > 2) {\n                speedX += 1;\n            }\n            speedX =\n                speedX +\n                speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\n            this.$lgThumb.css(\n                'transition-duration',\n                Math.min(speedX - 1, 2) + 'settings',\n            );\n\n            distanceXnew = distanceXnew * speedX;\n\n            this.translateX = this.getPossibleTransformX(\n                this.translateX - distanceXnew,\n            );\n            this.setTranslate(this.translateX);\n        } else {\n            this.translateX = thumbDragUtils.newTranslateX;\n        }\n        if (\n            Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <\n            this.settings.thumbnailSwipeThreshold\n        ) {\n            this.thumbClickable = true;\n        }\n\n        return thumbDragUtils;\n    }\n\n    getThumbHtml(thumb: string, index: number, alt?: string): string {\n        const slideVideoInfo =\n            this.core.galleryItems[index].__slideVideoInfo || {};\n        let thumbImg;\n\n        if (slideVideoInfo.youtube) {\n            if (this.settings.loadYouTubeThumbnail) {\n                thumbImg =\n                    '//img.youtube.com/vi/' +\n                    slideVideoInfo.youtube[1] +\n                    '/' +\n                    this.settings.youTubeThumbSize +\n                    '.jpg';\n            } else {\n                thumbImg = thumb;\n            }\n        } else {\n            thumbImg = thumb;\n        }\n\n        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n        return `<div data-lg-item-id=\"${index}\" class=\"lg-thumb-item ${\n            index === this.core.index ? ' active' : ''\n        }\"\n        style=\"width:${this.settings.thumbWidth}px; height: ${\n            this.settings.thumbHeight\n        };\n            margin-right: ${this.settings.thumbMargin}px;\">\n            <img ${altAttr} data-lg-item-id=\"${index}\" src=\"${thumbImg}\" />\n        </div>`;\n    }\n\n    getThumbItemHtml(items: ThumbnailGalleryItem[]): string {\n        let thumbList = '';\n        for (let i = 0; i < items.length; i++) {\n            thumbList += this.getThumbHtml(items[i].thumb, i, items[i].alt);\n        }\n\n        return thumbList;\n    }\n\n    setThumbItemHtml(items: ThumbnailGalleryItem[]): void {\n        const thumbList = this.getThumbItemHtml(items);\n        this.$lgThumb.html(thumbList);\n    }\n\n    setAnimateThumbStyles(): void {\n        if (this.settings.animateThumb) {\n            this.core.outer.addClass('lg-animate-thumb');\n        }\n    }\n\n    // Manage thumbnail active calss\n    manageActiveClassOnSlideChange(): void {\n        // manage active class for thumbnail\n        this.core.LGel.on(\n            `${lGEvents.beforeSlide}.thumb`,\n            (event: CustomEvent) => {\n                const $thumb = this.core.outer.find('.lg-thumb-item');\n                const { index } = event.detail;\n                $thumb.removeClass('active');\n                $thumb.eq(index).addClass('active');\n            },\n        );\n    }\n\n    // Toggle thumbnail bar\n    toggleThumbBar(): void {\n        if (this.settings.toggleThumb) {\n            this.core.outer.addClass('lg-can-toggle');\n            this.core.$toolbar.append(\n                '<button type=\"button\" aria-label=\"' +\n                    this.settings.thumbnailPluginStrings['toggleThumbnails'] +\n                    '\" class=\"lg-toggle-thumb lg-icon\"></button>',\n            );\n            this.core.outer\n                .find('.lg-toggle-thumb')\n                .first()\n                .on('click.lg', () => {\n                    this.core.outer.toggleClass('lg-components-open');\n                });\n        }\n    }\n\n    thumbKeyPress(): void {\n        this.$LG(window).on(`keydown.lg.thumb.global${this.core.lgId}`, (e) => {\n            if (!this.core.lgOpened || !this.settings.toggleThumb) return;\n\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                this.core.outer.addClass('lg-components-open');\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                this.core.outer.removeClass('lg-components-open');\n            }\n        });\n    }\n\n    destroy(): void {\n        if (this.settings.thumbnail) {\n            this.$LG(window).off(`.lg.thumb.global${this.core.lgId}`);\n            this.core.LGel.off('.lg.thumb');\n            this.core.LGel.off('.thumb');\n            this.$thumbOuter.remove();\n            this.core.outer.removeClass('lg-has-thumb');\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}